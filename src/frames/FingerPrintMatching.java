/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package frames;

import cacd.Cacd;
import java.awt.HeadlessException;
import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author Shivesh Srivastava
 */
public class FingerPrintMatching extends javax.swing.JFrame {

    Connection conn = null;
    ResultSet rs = null;
    PreparedStatement pst = null;
    File selectedFile;
    int flag = 0;
    /**
     * Creates new form FingerPrintMatching
     */
    public FingerPrintMatching() {
        initComponents();
        conn = Cacd.connect();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        add = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        verify = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocationByPlatform(true);
        setPreferredSize(new java.awt.Dimension(400, 400));

        add.setBackground(new java.awt.Color(51, 102, 255));
        add.setForeground(new java.awt.Color(255, 255, 255));
        add.setText("+");
        add.setBorderPainted(false);
        add.setContentAreaFilled(false);
        add.setOpaque(true);
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });

        label.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        verify.setBackground(new java.awt.Color(51, 102, 255));
        verify.setForeground(new java.awt.Color(255, 255, 255));
        verify.setText("Verify");
        verify.setBorderPainted(false);
        verify.setContentAreaFilled(false);
        verify.setOpaque(true);
        verify.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                verifyActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(51, 102, 255));
        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setForeground(new java.awt.Color(255, 255, 255));
        jButton1.setText("X");
        jButton1.setBorderPainted(false);
        jButton1.setContentAreaFilled(false);
        jButton1.setOpaque(true);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(452, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap())
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(verify)
                        .addGap(41, 41, 41))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(110, 110, 110))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(154, 154, 154))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(421, Short.MAX_VALUE)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(56, 56, 56)
                .addComponent(label, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(5, 5, 5)
                .addComponent(add)
                .addGap(74, 74, 74)
                .addComponent(verify)
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        // TODO add your handling code here:
        
        JFileChooser file = new JFileChooser("C:/Users/Shivesh Srivastava/Documents/NetBeansProjects/cacd");
        //file.setCurrentDirectory(new File(System.getProperty("user.home")));
        FileNameExtensionFilter filter = new FileNameExtensionFilter("*.Images","jpg","gif","png");
        file.addChoosableFileFilter(filter);
        int result = file.showSaveDialog(null);
        
        if(result == JFileChooser.APPROVE_OPTION)
        {
            selectedFile = file.getSelectedFile();
            String path = selectedFile.getAbsolutePath();
            label.setIcon(resizeImage(path));
        }
        else if(result == JFileChooser.CANCEL_OPTION)
        {
            System.out.println("No file selected");
        }
        
    }//GEN-LAST:event_addActionPerformed

    private void verifyActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_verifyActionPerformed
        // TODO add your handling code here:
        try{
            flag = 0;
            pst=conn.prepareStatement("select * from criminal order by criminal_id desc limit 1");
            rs=pst.executeQuery();
            if(rs.next())
            {
            int max = rs.getInt("criminal_id");
            System.out.println(max);
            BufferedImage imgA = null; 
            BufferedImage imgB = null; 
        
            File fileA = selectedFile;
        
            for(int i = 1; i <= max ; i++)
            {
                File fileB = new File(("C:/Users/Shivesh Srivastava/Documents/NetBeansProjects/cacd/FingerPrint_Images/"+i+".jpg"));
                
                try
                { 
                    imgA = ImageIO.read(fileA); 
                    imgB = ImageIO.read(fileB); 
                    
                }catch (IOException e) 
                { 
                    System.out.println(e); 
                }
                int width1 = imgA.getWidth(); 
                int width2 = imgB.getWidth(); 
                System.out.println(width1 + " " + width2);
                int height1 = imgA.getHeight(); 
                int height2 = imgB.getHeight(); 
                System.out.println(height1 + " " + height2);
                
                if ((width1 != width2) || (height1 != height2))
                {
                    System.out.println("Error: Images dimensions" + " mismatch"); 
                    break;
                }
                else
                { 
                    long difference = 0; 
                    for (int y = 0; y < height1; y++) 
                    { 
                        for (int x = 0; x < width1; x++) 
                        { 
                            int rgbA = imgA.getRGB(x, y); 
                            int rgbB = imgB.getRGB(x, y); 
                            int redA = (rgbA >> 16) & 0xff; 
                            int greenA = (rgbA >> 8) & 0xff; 
                            int blueA = (rgbA) & 0xff; 
                            int redB = (rgbB >> 16) & 0xff; 
                            int greenB = (rgbB >> 8) & 0xff; 
                            int blueB = (rgbB) & 0xff; 
                            difference += Math.abs(redA - redB); 
                            difference += Math.abs(greenA - greenB); 
                            difference += Math.abs(blueA - blueB); 
                        } 
                    } 
  
            // Total number of red pixels = width * height 
            // Total number of blue pixels = width * height 
            // Total number of green pixels = width * height 
            // So total number of pixels = width * height * 3 
                    double total_pixels = width1 * height1 * 3; 
  
            // Normalizing the value of different pixels 
            // for accuracy(average pixels per color 
            // component) 
                    double avg_different_pixels = difference / total_pixels; 
  
            // There are 255 values of pixels in total 
                    double percentage = (avg_different_pixels / 255) * 100; 
  
                    System.out.println("Difference Percentage-->" + percentage);
                    if(percentage < 1.0)
                    {
                        JOptionPane.showMessageDialog(null, "It matches criminal ID = " + i);
                        flag = 1;
                        break;
                    }
                }
            
            }
        }
            if(flag == 0)
            {
                JOptionPane.showMessageDialog(null, "No match found!");
            }
         
        }catch(HeadlessException | SQLException e){
            JOptionPane.showMessageDialog(null, e);
        }
    }//GEN-LAST:event_verifyActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        
        setVisible(false);
        newhome h= new newhome();
        h.setVisible(true);
        
    }//GEN-LAST:event_jButton1ActionPerformed

    public ImageIcon resizeImage(String imagePath)
    {
        ImageIcon myImage = new ImageIcon(imagePath);
        Image img = myImage.getImage();
        Image newImage = img.getScaledInstance(label.getWidth(), label.getHeight(), Image.SCALE_SMOOTH);
        ImageIcon image = new ImageIcon(newImage);
        return image;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FingerPrintMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FingerPrintMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FingerPrintMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FingerPrintMatching.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new FingerPrintMatching().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel label;
    private javax.swing.JButton verify;
    // End of variables declaration//GEN-END:variables
}
